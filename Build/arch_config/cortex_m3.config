include $(BUILD_DIR)/compiler_configs/arm_none_gcc/arm_none_gcc.config

#5: c文件编译
CFLAGS += -mcpu=Cortex-M3
CFLAGS += -Wall
CFLAGS += -ggdb
CFLAGS += -fdata-sections -ffunction-sections
CFLAGS += -mthumb
CFLAGS += -mthumb-interwork
CFLAGS += -nostartfiles

#6: 汇编文件
ASMFLAGS += -mcpu=Cortex-M3
ASMFLAGS += -Wall
ASMFLAGS += -ggdb
ASMFLAGS += -fdata-sections -ffunction-sections
ASMFLAGS += -mthumb
ASMFLAGS += -mthumb-interwork
ASMFLAGS += -nostartfiles

#4: 链接
#1.--specs=nosys.specs 表示不使用某种特性，如果使用的话链接会出错：
#		arm-none-eabi/lib/libc.a(lib_a-exit.o): in function `exit':
#		exit.c:(.text.exit+0x2c): undefined reference to `_exit'
CLINK_FLAGS += --specs=nosys.specs
CLINK_FLAGS += -Wl,--gc-sections
CLINK_FLAGS += -Wl,--cref
CLINK_FLAGS += -specs=nano.specs
CLINK_FLAGS += -mthumb
CLINK_FLAGS += -mthumb-interwork
CLINK_FLAGS += -fdata-sections -ffunction-sections
CLINK_FLAGS += -Wl,--wrap=atexit
CLINK_FLAGS += -nostartfiles
CLINK_FLAGS += -Wl,--nostdlib
#CLINK_FLAGS += -Wl,--print-gc-sections
#CLINK_FLAGS += -std=c99

#芯片架构(会用在硬件平台相关的编译控制上，如bsp)
CATOS_BOARD_ARCH = cortex_m3

.EXPORT_ALL_VARIABLES:
